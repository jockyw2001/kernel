// note: no Blank line between the file until the end
// local dimmmming type
typedef enum
{
    E_LD_EDGE_TB_TYPE = 0, // top and bottom
    E_LD_EDGE_LR_TYPE = 1, // left and right
    E_LD_DIRECT_TYPE  = 2, //default
    E_LD_LOCAL_TYPE   = 3  // new mode supporting 32x32 LED
} EN_LD_LED_TYPE;
// debug level
typedef enum
{
    EN_DEBUG_LEVEL_ERROR=0x01,
    EN_DEBUG_LEVEL_INFO=0x02,
    EN_DEBUG_LEVEL_DEBUG=0x04,
    EN_DEBUG_LEVEL_ALL=0x07,
    EN_DEBUG_LEVEL_MAX 
}EN_DEBUG_LEVEL;
// content
[begin]
    // PANEL
    u16PanelWidth = 3840;       // Panel Width 
    u16PanelHeight = 2160;      // Panel Height
    u32BaseAddr = 0x3e580000;   // localdimming mmap address
    eLEDType = 3;               // E_LD_DIRECT_TYPE EnuLD_LED_TYPE
    u8LDFWidth = 24;            // Statistic width
    u8LDFHeight = 12;            // Statistic height
    u8LEDWidth = 24;            // LED width
    u8LEDHeight = 12;            // LED height
    u8LSFWidth = 128;           // LSF width
    u8LSFHeight = 72;           // LSF height
    bCompEn = TRUE;            // Compensation enable TRUE
    bEdge2DEn = TRUE;           // Edge2D enable  FALSE 
    bLSFEncodingEn = TRUE;		//LSF 12BIT
    bCompLowGainEn = TRUE;		//low-high compesation
    bSaturationEn = TRUE;		//saturation enable
    bSFLinearEn = FALSE;		//Spatial Filter linear style
    // HW
    u32LsfInitialPhase_HL = 0x80000;    // LSF Initial Phase
    u32LsfInitialPhase_HR = 0x80000;    // LSF Initial Phase
    u8DCMaxAlpha = 0x7;                 // statistics : higher -> prefer max, lower -> prefer average
    u8CompensationBlend = 0x3;          // pixel compensation tuner : higher -> prefer compensated pixel, lower -> prefer original pixel
    // SW
    u8GDStrength = 0xFF;        // global dimming strength
    u8LDStrength = 0xFF;        // local dimming strength
    u8TFStrengthUp = 0xFF;      // temporal filter strength up
    u8TFStrengthDn = 0xF8;      // temporal filter strength down
    u8TFLowThreshold = 0x14;    // temporal filter low threshold
    u8TFHightThreshold = 0x36;  // temporal filter high threshold
    u8SFStrength = 0xFF;        // spatial filter strength
    u8SFStrength2 = 0xFF;       // spatial filter strength 2
    u8SFStrength3 = 0xFF;       // spatial filter strength 3
    u8SFStrength4 = 0xFF;       // spatial filter strength 2
    u8SFStrength5 = 0xFF;       // spatial filter strength 3
    u8InGamma = 0x00;           // gamma at SW begin
    u8OutGamma = 0x00;          // gamma at SW end
    u8BLMinValue = 0x00;        // min clamp value
    u8NRStrength = 0x30;        // de-noise strength
    //MISC
    u32MarqueeDelay = 0xff;	// marquee delay
    bDbgEn = FALSE;          	// switcher for debug using: u8DebugLevel&bLDEn, if call dbg ioctl, it's false
    u8DebugLevel = 0x1;		// log level, for debug using 
    bLDEn = TRUE;		// local dimming enable, for debug using, programming is ioctl:MDRV_LDM_IOC_ENABLE
    u8SPIBits = 0;		// SPI data convert 16-->8/12/16
    u8ClkHz = 60;              //panel frequency,120hz or 60hz,default is 60hz
    u8MirrorPanel = 0;         //for mirror panel just test for Public version 0-normal panel 1-mirror panel        
[end]
